include:
  - project: 'acc-co/devops/python/acc-py-devtools'
    file: 'acc_py_devtools/templates/gitlab-ci/python.yml'


stages:
  - Code Quality
  - Unit Tests
  - Release

variables:
  ACCPY_PYQT_DOCKER_IMAGE: gitlab-registry.cern.ch/acc-co/accsoft/gui/accsoft-gui-pyqt-distro/acc-py-pyqt:ci-v20.01.0
  project_name: comrad  # Required by acc-py templates

.init_sequence: &init_sequence
- source /opt/venv/bin/activate
- git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.cern.ch".insteadOf ssh://git@gitlab.cern.ch:7999

before_script:
  - *init_sequence

flake8:
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Code Quality
  script:
    - pip install .[lint]
    - export LANG=en_US.UTF-8  # Otherwise, flake8 might fail with UnicodeDecodeError: 'ascii' codec can't decode byte
    - flake8

mypy:
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Code Quality
  script:
    - pip install .[lint]
    - mypy . tests docs comrad/app comrad/app/plugins/toolbar comrad/data _comrad

pytest:
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Unit Tests
  script:
    - pip install .[test]
    - run_headless python -m pytest --random-order --junitxml=report.xml --cov-report html:coverage --cov-report term-missing:skip-covered --cov=comrad --cov=_comrad --cov=_comrad_designer --cov=_comrad_examples -x --color=yes
  artifacts:
    name: coverage-report
    paths:
      - coverage
    when: on_success
    expire_in: 1 month
    reports:
      junit: report.xml

twine:
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Release
  script:
    - pip install .[release]
    - pip install -U setuptools
    - python setup.py sdist bdist_wheel
    - python -m twine upload --repository-url http://acc-py-repo:8081/repository/py-release-local/ -u $ACCPY_NEXUS_USER -p $ACCPY_NEXUS_PASSWD dist/*
  when: manual
  only:
    refs:
      - tags
    variables:
      - $ACCPY_NEXUS_USER != null
      - $ACCPY_NEXUS_PASSWD != null

.sphinx_custom:
  before_script:
      - *init_sequence
      - yum install -y -q graphviz  # Required to generate inheritance diagrams
      - pip install .[doc]  # Need to install it here, as sphobjinv should be available
      - python -c "import sphobjinv as soi; [soi.fileops.writebytes(path=f'docs/{f}.inv', contents=soi.zlib.compress(soi.Inventory(plaintext=soi.fileops.readbytes(f'docs/{f}.txt')).data_file())) for f in ['qt', 'pydm', 'qsci']]" # Prepare custom intersphinx inventory files

sphinx:
  extends:
    - .acc_py_build_docs
    - .sphinx_custom
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Release
  only:
    refs:
      - master
      - develop

sphinx on tag:
  extends:
    - .acc_py_build_docs_on_tag
    - .sphinx_custom
  image: $ACCPY_PYQT_DOCKER_IMAGE
  stage: Release

